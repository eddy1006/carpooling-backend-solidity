{
  "address": "0xa5AaBcFF6b8F1Ee83e4d6Bbfa3a285d04f8e2c29",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "ERROR_CarPooling",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressToRides",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "bookRide",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "cancelRide",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "completionStatus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rf",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "t",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "td",
          "type": "string"
        }
      ],
      "name": "createRide",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRides",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "array",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "getIndex",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "getRide",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserRides",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "rideCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rideCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rideKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rides",
      "outputs": [
        {
          "internalType": "address",
          "name": "driver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxPassengers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rideFare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tripDetails",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "updateStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2c532d415a91de429143033c140ab2bf86a36a1991ba39bf0f48392929c51af4",
  "receipt": {
    "to": null,
    "from": "0x054f3B1d8b5Cd8Ad7f32dD519Fe24779B48c21b0",
    "contractAddress": "0xa5AaBcFF6b8F1Ee83e4d6Bbfa3a285d04f8e2c29",
    "transactionIndex": 51,
    "gasUsed": "3929250",
    "logsBloom": "0x
    "blockHash": "0x7eb536a6b566383314616a82878e0756e75c8b8d9262b4065ee0ab6ab603446f",
    "transactionHash": "0x2c532d415a91de429143033c140ab2bf86a36a1991ba39bf0f48392929c51af4",
    "logs": [],
    "blockNumber": 5519353,
    "cumulativeGasUsed": "13862430",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "35f4cdbbe54f6d490aee7fc1331da618",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ERROR_CarPooling\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToRides\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"bookRide\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"cancelRide\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"completionStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"td\",\"type\":\"string\"}],\"name\":\"createRide\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRides\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"getRide\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserRides\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"rideCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rideCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rideKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rides\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPassengers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rideFare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tripDetails\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"updateStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CarPooling.sol\":\"CarPooling\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/CarPooling.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Create ride\\n// book ride\\n// withdraw money for ride\\n// cancel ride :- driver(return all money back to passengers), passenger(return deducted amount back to passenger)\\n// get all ride :- either make an array to save keys in contract itself or use getALL for the first time to get all the keys then maintain them in the frontend\\n// get index function :- to remove repeated code for getting the index\\n\\n// Tests\\n// create a ride\\n// get all rides, single ride and user rides\\n// book a ride\\n// mark completion status by passenger\\n// cancel by passenger and by driver\\n// withdraw money via driver\\n\\n// Things that can be implemented in this contract\\n// 1. Fallback functions\\n// 2. Time based cancellation refund system\\n// 3. Events\\n// 4. Writing tests (just in case if you feel like)\\n\\nerror ERROR_CarPooling(string message);\\n\\ncontract CarPooling {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    struct Ride {\\n        address driver; // time // locations (source and destination)\\n        address[] passengers;\\n        uint256 maxPassengers;\\n        uint256 rideFare; // co ordinates des co ordinates save -- passenger ride filter\\n        uint256 rideId;\\n        uint256 time; // startTime\\n        string tripDetails; // source and des\\n    }\\n\\n    mapping(uint256 => Ride) public rides;\\n    mapping(address => uint256[]) public addressToRides;\\n    mapping(uint256 => uint256) public completionStatus;\\n\\n    uint256 public rideCount = 0;\\n    uint256[] public rideKeys; // delete when ride is cancelled\\n\\n    function createRide(\\n        uint256 mp,\\n        uint256 rf,\\n        uint256 t,\\n        string memory td\\n    ) public {\\n        rideCount += 1;\\n        uint256 rid = rideCount;\\n        address[] memory p;\\n        rf = rf * 1e18;\\n        rf = rf.getPriceInEth(s_priceFeed);\\n        rides[rid] = Ride(msg.sender, p, mp, rf, rid, t, td);\\n\\n        addressToRides[msg.sender].push(rid);\\n        completionStatus[rid] = 0;\\n        rideKeys.push(rid);\\n    }\\n\\n    function bookRide(uint256 rideId) public payable duplicate(rideId) {\\n        if (msg.value < rides[rideId].rideFare)\\n            revert ERROR_CarPooling({\\n                message: \\\"Money sent not equal to ride Fare\\\"\\n            });\\n        rides[rideId].passengers.push(msg.sender);\\n        addressToRides[msg.sender].push(rideId);\\n    }\\n\\n    modifier duplicate(uint256 rideId) {\\n        Ride memory r = rides[rideId];\\n        if (msg.sender == r.driver || r.passengers.length == r.maxPassengers) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Driver cannot book the ride or maximum passengers reached\\\"\\n            });\\n        }\\n        for (uint256 i = 0; i < r.passengers.length; i++) {\\n            if (msg.sender == r.passengers[i]) {\\n                revert ERROR_CarPooling({\\n                    message: \\\"You have already booked the ride\\\"\\n                });\\n            }\\n        }\\n        _;\\n    }\\n\\n    function updateStatus(uint256 rideId) public {\\n        // completion of ride by passengers\\n        address passenger = msg.sender;\\n        uint256[] memory pRides = addressToRides[passenger];\\n        (bool exists, uint256 index) = getIndex(pRides, rideId);\\n\\n        if (!exists) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Ride is not registered with passenger\\\"\\n            });\\n        }\\n\\n        completionStatus[rideId] += 1;\\n\\n        // erase this ride from passengers list\\n        addressToRides[passenger][index] = pRides[pRides.length - 1];\\n        addressToRides[passenger].pop();\\n    }\\n\\n    function rideCompleted(uint256 rideId) public {\\n        // driver withdrawing money\\n        if (msg.sender != rides[rideId].driver) {\\n            revert ERROR_CarPooling({message: \\\"Sender is not the driver\\\"});\\n        }\\n        if (completionStatus[rideId] != rides[rideId].passengers.length) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Not all passengers have marked the ride as completed\\\"\\n            });\\n        }\\n\\n        uint256 count = rides[rideId].passengers.length;\\n        uint256 amount = count * rides[rideId].rideFare;\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        require(callSuccess, \\\"Call method failed\\\");\\n\\n        // erase ride from drivers list erase completion status for this ride id\\n        completionStatus[rideId] = 0;\\n        uint256[] memory driverRides = addressToRides[msg.sender];\\n        (bool exists, uint256 index) = getIndex(driverRides, rideId);\\n\\n        if (!exists) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Ride is not registerd with driver\\\"\\n            });\\n        }\\n\\n        addressToRides[msg.sender][index] = driverRides[driverRides.length - 1];\\n        addressToRides[msg.sender].pop();\\n\\n        // erase ride from rides mapping as ride is completed\\n        rides[rideId] = rides[0]; // rides[0] is never given anything so will put default values back in rideId\\n\\n        // erase rideId from rideKeys\\n        uint256[] memory keys = rideKeys;\\n        (exists, index) = getIndex(keys, rideId);\\n\\n        if (!exists) {\\n            revert ERROR_CarPooling({message: \\\"Key does not exist\\\"});\\n        }\\n\\n        rideKeys[index] = keys[keys.length - 1];\\n        rideKeys.pop();\\n    }\\n\\n    function cancelRide(uint256 rideId) public {\\n        // two cases\\n        // 1. Either cancelled by the driver\\n        // 2. Or cancelled by one of the passegners\\n\\n        Ride memory r = rides[rideId];\\n        if (msg.sender == r.driver) {\\n            // return full money back to all passengers\\n            address[] memory passengers = r.passengers;\\n            uint256 amount = r.rideFare;\\n\\n            for (uint256 i = 0; i < passengers.length; i++) {\\n                address p = passengers[i];\\n                (bool callSuccess, ) = payable(p).call{value: amount}(\\\"\\\");\\n                require(callSuccess, \\\"Call method failed\\\");\\n            }\\n\\n            // remove ride from driver's list\\n            uint256[] memory driverRides = addressToRides[msg.sender];\\n            (bool exists, uint256 index) = getIndex(driverRides, rideId);\\n\\n            if (!exists) {\\n                revert ERROR_CarPooling(\\\"Ride is not registered with the user\\\");\\n            }\\n\\n            addressToRides[msg.sender][index] = driverRides[\\n                driverRides.length - 1\\n            ];\\n            addressToRides[msg.sender].pop();\\n\\n            // remove ride from rides mapping as well as the ride is deleted\\n            rides[rideId] = rides[0];\\n\\n            // remove the rideId from ride keys\\n            uint256[] memory keys = rideKeys;\\n            (exists, index) = getIndex(keys, rideId);\\n\\n            if (!exists) {\\n                revert ERROR_CarPooling(\\\"Key does not exist\\\");\\n            }\\n\\n            rideKeys[index] = keys[keys.length - 1];\\n            rideKeys.pop();\\n\\n            // reset the completion status\\n            completionStatus[rideId] = 0;\\n        } else {\\n            // passenger cancels\\n            // erase address from rides passenger array\\n            uint256 index;\\n            address passenger = msg.sender;\\n            address[] memory passengers = r.passengers;\\n            for (uint256 i = 0; i < passengers.length; i++) {\\n                if (passengers[i] == passenger) {\\n                    index = i;\\n                    break;\\n                }\\n            }\\n            rides[rideId].passengers[index] = passengers[passengers.length - 1];\\n            rides[rideId].passengers.pop();\\n\\n            // erases ride from passengers rides list\\n            bool exists;\\n            uint256[] memory userRides = addressToRides[passenger];\\n            (exists, index) = getIndex(userRides, rideId);\\n            if (!exists) {\\n                revert ERROR_CarPooling(\\\"Ride is not registered with user\\\");\\n            }\\n            addressToRides[msg.sender][index] = userRides[userRides.length - 1];\\n            addressToRides[msg.sender].pop();\\n\\n            // return half of the money back to passenger  ( can make it time based in future)\\n            uint256 amount = r.rideFare;\\n            amount = amount / 2;\\n\\n            (bool callSuccess1, ) = payable(passenger).call{value: amount}(\\\"\\\");\\n            require(callSuccess1, \\\"Call method failed\\\");\\n\\n            // compensate the driver with some money, half of ride fare as of now (fixed amount or maybe some time based amount for him as well)\\n            (bool callSuccess2, ) = payable(r.driver).call{value: amount}(\\\"\\\");\\n            require(callSuccess2, \\\"Call method failed\\\");\\n        }\\n    }\\n\\n    function getIndex(\\n        uint256[] memory array,\\n        uint256 val\\n    ) public pure returns (bool, uint256) {\\n        uint256 index = 0;\\n        bool exists = false;\\n        for (uint256 i = 0; i < array.length; i++) {\\n            if (array[i] == val) {\\n                index = i;\\n                exists = true;\\n                break;\\n            }\\n        }\\n\\n        return (exists, index);\\n    }\\n\\n    function getRide(\\n        uint256 rideId\\n    )\\n        public\\n        view\\n        returns (\\n            address,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            string memory\\n        )\\n    {\\n        Ride memory r = rides[rideId];\\n        return (\\n            r.driver,\\n            r.passengers.length,\\n            r.maxPassengers,\\n            r.rideFare,\\n            r.rideId,\\n            r.time,\\n            r.tripDetails\\n        );\\n    }\\n\\n    function getUserRides()\\n        public\\n        view\\n        returns (\\n            address[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            string[] memory\\n        )\\n    {\\n        uint256[] memory userRides = addressToRides[msg.sender];\\n\\n        address[] memory drivers = new address[](userRides.length);\\n        uint256[] memory currentPassengers = new uint256[](userRides.length);\\n        uint256[] memory maxPassengers = new uint256[](userRides.length);\\n        uint256[] memory rideFare = new uint256[](userRides.length);\\n        uint256[] memory rideId = new uint256[](userRides.length);\\n        uint256[] memory time = new uint256[](userRides.length);\\n        string[] memory td = new string[](userRides.length);\\n\\n        for (uint256 i = 0; i < userRides.length; i++) {\\n            Ride memory r = rides[userRides[i]]; // CHECK IF RIDE EXISTS FOR GIVEN ID OR NOT\\n            if (r.rideId != 0) {\\n                drivers[i] = r.driver;\\n                currentPassengers[i] = r.passengers.length;\\n                maxPassengers[i] = r.maxPassengers;\\n                rideFare[i] = r.rideFare;\\n                rideId[i] = r.rideId;\\n                time[i] = r.time;\\n                td[i] = r.tripDetails;\\n            }\\n        }\\n\\n        return (\\n            drivers,\\n            currentPassengers,\\n            maxPassengers,\\n            rideFare,\\n            rideId,\\n            time,\\n            td\\n        ); // cd not sent coz stack too deep error find a fix\\n    }\\n\\n    function getAllRides()\\n        public\\n        view\\n        returns (\\n            address[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            string[] memory\\n        )\\n    {\\n        uint256[] memory keys = rideKeys;\\n\\n        address[] memory drivers = new address[](keys.length);\\n        uint256[] memory currentPassengers = new uint256[](keys.length);\\n        uint256[] memory maxPassengers = new uint256[](keys.length);\\n        uint256[] memory rideFare = new uint256[](keys.length);\\n        uint256[] memory rideId = new uint256[](keys.length);\\n        uint256[] memory time = new uint256[](keys.length);\\n        string[] memory td = new string[](keys.length);\\n\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            Ride memory r = rides[keys[i]]; // CHECK IF RIDE EXISTS FOR GIVEN ID OR NOT\\n            if (r.rideId != 0) {\\n                drivers[i] = r.driver;\\n                currentPassengers[i] = r.passengers.length;\\n                maxPassengers[i] = r.maxPassengers;\\n                rideFare[i] = r.rideFare;\\n                rideId[i] = r.rideId;\\n                time[i] = r.time;\\n                td[i] = r.tripDetails;\\n            }\\n        }\\n\\n        return (\\n            drivers,\\n            currentPassengers,\\n            maxPassengers,\\n            rideFare,\\n            rideId,\\n            time,\\n            td\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x477c9ad4d36420c95019e88bd832d2096833191728eb6d50b3adb08ab706e5ea\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n\\n    function getPriceInEth(\\n        uint256 dollarAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n\\n        uint256 usdInEth = (dollarAmount * 1e18) / ethPrice;\\n\\n        return usdInEth;\\n    }\\n}\\n\",\"keccak256\":\"0xfedb6b57cf32e1ecf31acf40220c2400746f3d654b465744c7e109e9faf9a49e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006004553480156200001657600080fd5b50604051620046f3380380620046f383398181016040528101906200003c9190620000ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b58262000088565b9050919050565b620000c781620000a8565b8114620000d357600080fd5b50565b600081519050620000e781620000bc565b92915050565b60006020828403121562000106576200010562000083565b5b60006200011684828501620000d6565b91505092915050565b6145c4806200012f6000396000f3fe6080604052600436106100e85760003560e01c8063787660c31161008a578063a6f07b2911610059578063a6f07b2914610346578063b47c18831461036f578063c69b2cf61461039a578063d61e7201146103b6576100e8565b8063787660c31461026b5780637c7b0ff41461029c578063805bceec146102df57806390aeada214610308576100e8565b806319d60f62116100c657806319d60f621461017e5780635205f112146101bb578063595c9609146101fd578063729a70811461023a576100e8565b80630294e77f146100ed5780630ec3b0271461012a5780631193856214610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190612fa3565b6103df565b6040516101219190612fdf565b60405180910390f35b34801561013657600080fd5b5061013f610403565b60405161014c9190613079565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190612fa3565b610427565b005b34801561018a57600080fd5b506101a560048036038101906101a09190612fa3565b610a18565b6040516101b29190612fdf565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190612fa3565b610a30565b6040516101f496959493929190613145565b60405180910390f35b34801561020957600080fd5b50610224600480360381019061021f91906131d9565b610b14565b6040516102319190612fdf565b60405180910390f35b34801561024657600080fd5b5061024f610b45565b60405161026297969594939291906134a1565b60405180910390f35b34801561027757600080fd5b5061028061115b565b60405161029397969594939291906134a1565b60405180910390f35b3480156102a857600080fd5b506102c360048036038101906102be9190612fa3565b611734565b6040516102d69796959493929190613541565b60405180910390f35b3480156102eb57600080fd5b50610306600480360381019061030191906136ec565b61193d565b005b34801561031457600080fd5b5061032f600480360381019061032a9190613837565b611b5c565b60405161033d9291906138ae565b60405180910390f35b34801561035257600080fd5b5061036d60048036038101906103689190612fa3565b611bb8565b005b34801561037b57600080fd5b5061038461275b565b6040516103919190612fdf565b60405180910390f35b6103b460048036038101906103af9190612fa3565b612761565b005b3480156103c257600080fd5b506103dd60048036038101906103d89190612fa3565b612b8d565b005b600581815481106103ef57600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cb576040517f971859530000000000000000000000000000000000000000000000000000000081526004016104c290613923565b60405180910390fd5b6001600082815260200190815260200160002060010180549050600360008381526020019081526020016000205414610539576040517f97185953000000000000000000000000000000000000000000000000000000008152600401610530906139b5565b60405180910390fd5b600060016000838152602001908152602001600020600101805490509050600060016000848152602001908152602001600020600301548261057b9190613a04565b905060003373ffffffffffffffffffffffffffffffffffffffff16826040516105a390613a77565b60006040518083038185875af1925050503d80600081146105e0576040519150601f19603f3d011682016040523d82523d6000602084013e6105e5565b606091505b5050905080610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062090613ad8565b60405180910390fd5b600060036000868152602001908152602001600020819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106cd57602002820191906000526020600020905b8154815260200190600101908083116106b9575b505050505090506000806106e18388611b5c565b9150915081610725576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161071c90613b6a565b60405180910390fd5b82600184516107349190613b8a565b8151811061074557610744613bbe565b5b6020026020010151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061079e5761079d613bbe565b5b9060005260206000200181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806107fb576107fa613bed565b5b6001900381819060005260206000200160009055905560016000808152602001908152602001600020600160008981526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546108b4929190612e60565b5060028201548160020155600382015481600301556004820154816004015560058201548160050155600682018160060190816108f19190613e34565b509050506000600580548060200260200160405190810160405280929190818152602001828054801561094357602002820191906000526020600020905b81548152602001906001019080831161092f575b505050505090506109548189611b5c565b80935081945050508261099c576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161099390613f68565b60405180910390fd5b80600182516109ab9190613b8a565b815181106109bc576109bb613bbe565b5b6020026020010151600583815481106109d8576109d7613bbe565b5b906000526020600020018190555060058054806109f8576109f7613bed565b5b600190038181906000526020600020016000905590555050505050505050565b60036020528060005260406000206000915090505481565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006018054610a9190613c4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610abd90613c4b565b8015610b0a5780601f10610adf57610100808354040283529160200191610b0a565b820191906000526020600020905b815481529060010190602001808311610aed57829003601f168201915b5050505050905086565b60026020528160005260406000208181548110610b3057600080fd5b90600052602060002001600091509150505481565b60608060608060608060606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610bdb57602002820191906000526020600020905b815481526020019060010190808311610bc7575b505050505090506000815167ffffffffffffffff811115610bff57610bfe6135c1565b5b604051908082528060200260200182016040528015610c2d5781602001602082028036833780820191505090505b5090506000825167ffffffffffffffff811115610c4d57610c4c6135c1565b5b604051908082528060200260200182016040528015610c7b5781602001602082028036833780820191505090505b5090506000835167ffffffffffffffff811115610c9b57610c9a6135c1565b5b604051908082528060200260200182016040528015610cc95781602001602082028036833780820191505090505b5090506000845167ffffffffffffffff811115610ce957610ce86135c1565b5b604051908082528060200260200182016040528015610d175781602001602082028036833780820191505090505b5090506000855167ffffffffffffffff811115610d3757610d366135c1565b5b604051908082528060200260200182016040528015610d655781602001602082028036833780820191505090505b5090506000865167ffffffffffffffff811115610d8557610d846135c1565b5b604051908082528060200260200182016040528015610db35781602001602082028036833780820191505090505b5090506000875167ffffffffffffffff811115610dd357610dd26135c1565b5b604051908082528060200260200182016040528015610e0657816020015b6060815260200190600190039081610df15790505b50905060005b8851811015611134576000600160008b8481518110610e2e57610e2d613bbe565b5b602002602001015181526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f2a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ee0575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054610f6b90613c4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9790613c4b565b8015610fe45780601f10610fb957610100808354040283529160200191610fe4565b820191906000526020600020905b815481529060010190602001808311610fc757829003601f168201915b5050505050815250509050600081608001511461112657806000015189838151811061101357611012613bbe565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080602001515188838151811061106657611065613bbe565b5b602002602001018181525050806040015187838151811061108a57611089613bbe565b5b60200260200101818152505080606001518683815181106110ae576110ad613bbe565b5b60200260200101818152505080608001518583815181106110d2576110d1613bbe565b5b6020026020010181815250508060a001518483815181106110f6576110f5613bbe565b5b6020026020010181815250508060c0015183838151811061111a57611119613bbe565b5b60200260200101819052505b508080600101915050610e0c565b50868686868686869e509e509e509e509e509e509e50505050505050505090919293949596565b6060806060806060806060600060058054806020026020016040519081016040528092919081815260200182805480156111b457602002820191906000526020600020905b8154815260200190600101908083116111a0575b505050505090506000815167ffffffffffffffff8111156111d8576111d76135c1565b5b6040519080825280602002602001820160405280156112065781602001602082028036833780820191505090505b5090506000825167ffffffffffffffff811115611226576112256135c1565b5b6040519080825280602002602001820160405280156112545781602001602082028036833780820191505090505b5090506000835167ffffffffffffffff811115611274576112736135c1565b5b6040519080825280602002602001820160405280156112a25781602001602082028036833780820191505090505b5090506000845167ffffffffffffffff8111156112c2576112c16135c1565b5b6040519080825280602002602001820160405280156112f05781602001602082028036833780820191505090505b5090506000855167ffffffffffffffff8111156113105761130f6135c1565b5b60405190808252806020026020018201604052801561133e5781602001602082028036833780820191505090505b5090506000865167ffffffffffffffff81111561135e5761135d6135c1565b5b60405190808252806020026020018201604052801561138c5781602001602082028036833780820191505090505b5090506000875167ffffffffffffffff8111156113ac576113ab6135c1565b5b6040519080825280602002602001820160405280156113df57816020015b60608152602001906001900390816113ca5790505b50905060005b885181101561170d576000600160008b848151811061140757611406613bbe565b5b602002602001015181526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561150357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114b9575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805461154490613c4b565b80601f016020809104026020016040519081016040528092919081815260200182805461157090613c4b565b80156115bd5780601f10611592576101008083540402835291602001916115bd565b820191906000526020600020905b8154815290600101906020018083116115a057829003601f168201915b505050505081525050905060008160800151146116ff5780600001518983815181106115ec576115eb613bbe565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080602001515188838151811061163f5761163e613bbe565b5b602002602001018181525050806040015187838151811061166357611662613bbe565b5b602002602001018181525050806060015186838151811061168757611686613bbe565b5b60200260200101818152505080608001518583815181106116ab576116aa613bbe565b5b6020026020010181815250508060a001518483815181106116cf576116ce613bbe565b5b6020026020010181815250508060c001518383815181106116f3576116f2613bbe565b5b60200260200101819052505b5080806001019150506113e5565b50868686868686869e509e509e509e509e509e509e50505050505050505090919293949596565b60008060008060008060606000600160008a81526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561183a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116117f0575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805461187b90613c4b565b80601f01602080910402602001604051908101604052809291908181526020018280546118a790613c4b565b80156118f45780601f106118c9576101008083540402835291602001916118f4565b820191906000526020600020905b8154815290600101906020018083116118d757829003601f168201915b505050505081525050905080600001518160200151518260400151836060015184608001518560a001518660c00151975097509750975097509750975050919395979092949650565b6001600460008282546119509190613f88565b92505081905550600060045490506060670de0b6b3a7640000856119749190613a04565b94506119a960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686612d9390919063ffffffff16565b94506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001878152602001868152602001838152602001858152602001848152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611a6a929190612eb2565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006019081611aa89190613fbc565b50905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190915055600060036000848152602001908152602001600020819055506005829080600181540180825580915050600190039060005260206000200160009091909190915055505050505050565b60008060008060005b8651811015611ba85785878281518110611b8257611b81613bbe565b5b602002602001015103611b9b5780925060019150611ba8565b8080600101915050611b65565b5080829350935050509250929050565b6000600160008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015611cb357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c69575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054611cf490613c4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611d2090613c4b565b8015611d6d5780601f10611d4257610100808354040283529160200191611d6d565b820191906000526020600020905b815481529060010190602001808311611d5057829003601f168201915b5050505050815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036122985760008160200151905060008260600151905060005b8251811015611ea7576000838281518110611de257611de1613bbe565b5b6020026020010151905060008173ffffffffffffffffffffffffffffffffffffffff1684604051611e1290613a77565b60006040518083038185875af1925050503d8060008114611e4f576040519150601f19603f3d011682016040523d82523d6000602084013e611e54565b606091505b5050905080611e98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8f90613ad8565b60405180910390fd5b50508080600101915050611dc4565b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f3357602002820191906000526020600020905b815481526020019060010190808311611f1f575b50505050509050600080611f478388611b5c565b9150915081611f8b576040517f97185953000000000000000000000000000000000000000000000000000000008152600401611f8290614100565b60405180910390fd5b8260018451611f9a9190613b8a565b81518110611fab57611faa613bbe565b5b6020026020010151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061200457612003613bbe565b5b9060005260206000200181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548061206157612060613bed565b5b6001900381819060005260206000200160009055905560016000808152602001908152602001600020600160008981526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805461211a929190612e60565b5060028201548160020155600382015481600301556004820154816004015560058201548160050155600682018160060190816121579190613e34565b50905050600060058054806020026020016040519081016040528092919081815260200182805480156121a957602002820191906000526020600020905b815481526020019060010190808311612195575b505050505090506121ba8189611b5c565b809350819450505082612202576040517f971859530000000000000000000000000000000000000000000000000000000081526004016121f990613f68565b60405180910390fd5b80600182516122119190613b8a565b8151811061222257612221613bbe565b5b60200260200101516005838154811061223e5761223d613bbe565b5b9060005260206000200181905550600580548061225e5761225d613bed565b5b600190038181906000526020600020016000905590556000600360008a815260200190815260200160002081905550505050505050612757565b60008033905060008360200151905060005b8151811015612315578273ffffffffffffffffffffffffffffffffffffffff168282815181106122dd576122dc613bbe565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361230857809350612315565b80806001019150506122aa565b5080600182516123259190613b8a565b8151811061233657612335613bbe565b5b602002602001015160016000878152602001908152602001600020600101848154811061236657612365613bbe565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008681526020019081526020016000206001018054806123d4576123d3613bed565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561249557602002820191906000526020600020905b815481526020019060010190808311612481575b505050505090506124a68188611b5c565b8096508193505050816124ee576040517f971859530000000000000000000000000000000000000000000000000000000081526004016124e59061416c565b60405180910390fd5b80600182516124fd9190613b8a565b8151811061250e5761250d613bbe565b5b6020026020010151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868154811061256757612566613bbe565b5b9060005260206000200181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806125c4576125c3613bed565b5b600190038181906000526020600020016000905590556000866060015190506002816125f091906141bb565b905060008573ffffffffffffffffffffffffffffffffffffffff168260405161261890613a77565b60006040518083038185875af1925050503d8060008114612655576040519150601f19603f3d011682016040523d82523d6000602084013e61265a565b606091505b505090508061269e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269590613ad8565b60405180910390fd5b6000886000015173ffffffffffffffffffffffffffffffffffffffff16836040516126c890613a77565b60006040518083038185875af1925050503d8060008114612705576040519150601f19603f3d011682016040523d82523d6000602084013e61270a565b606091505b505090508061274e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161274590613ad8565b60405180910390fd5b50505050505050505b5050565b60045481565b806000600160008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561285d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612813575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805461289e90613c4b565b80601f01602080910402602001604051908101604052809291908181526020018280546128ca90613c4b565b80156129175780601f106128ec57610100808354040283529160200191612917565b820191906000526020600020905b8154815290600101906020018083116128fa57829003601f168201915b5050505050815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061296857508060400151816020015151145b156129a8576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161299f9061425e565b60405180910390fd5b60005b816020015151811015612a5157816020015181815181106129cf576129ce613bbe565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603612a44576040517f97185953000000000000000000000000000000000000000000000000000000008152600401612a3b906142ca565b60405180910390fd5b80806001019150506129ab565b506001600084815260200190815260200160002060030154341015612aab576040517f97185953000000000000000000000000000000000000000000000000000000008152600401612aa29061435c565b60405180910390fd5b60016000848152602001908152602001600020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b60003390506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612c1d57602002820191906000526020600020905b815481526020019060010190808311612c09575b50505050509050600080612c318386611b5c565b9150915081612c75576040517f97185953000000000000000000000000000000000000000000000000000000008152600401612c6c906143ee565b60405180910390fd5b6001600360008781526020019081526020016000206000828254612c999190613f88565b925050819055508260018451612caf9190613b8a565b81518110612cc057612cbf613bbe565b5b6020026020010151600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612d1957612d18613bbe565b5b9060005260206000200181905550600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612d7657612d75613bed565b5b600190038181906000526020600020016000905590555050505050565b600080612d9f83612dcf565b9050600081670de0b6b3a764000086612db89190613a04565b612dc291906141bb565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015612e1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e41919061449b565b5050509150506402540be40081612e589190614516565b915050919050565b828054828255906000526020600020908101928215612ea15760005260206000209182015b82811115612ea0578254825591600101919060010190612e85565b5b509050612eae9190612f3c565b5090565b828054828255906000526020600020908101928215612f2b579160200282015b82811115612f2a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612ed2565b5b509050612f389190612f3c565b5090565b5b80821115612f55576000816000905550600101612f3d565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612f8081612f6d565b8114612f8b57600080fd5b50565b600081359050612f9d81612f77565b92915050565b600060208284031215612fb957612fb8612f63565b5b6000612fc784828501612f8e565b91505092915050565b612fd981612f6d565b82525050565b6000602082019050612ff46000830184612fd0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061303f61303a61303584612ffa565b61301a565b612ffa565b9050919050565b600061305182613024565b9050919050565b600061306382613046565b9050919050565b61307381613058565b82525050565b600060208201905061308e600083018461306a565b92915050565b600061309f82612ffa565b9050919050565b6130af81613094565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156130ef5780820151818401526020810190506130d4565b60008484015250505050565b6000601f19601f8301169050919050565b6000613117826130b5565b61312181856130c0565b93506131318185602086016130d1565b61313a816130fb565b840191505092915050565b600060c08201905061315a60008301896130a6565b6131676020830188612fd0565b6131746040830187612fd0565b6131816060830186612fd0565b61318e6080830185612fd0565b81810360a08301526131a0818461310c565b9050979650505050505050565b6131b681613094565b81146131c157600080fd5b50565b6000813590506131d3816131ad565b92915050565b600080604083850312156131f0576131ef612f63565b5b60006131fe858286016131c4565b925050602061320f85828601612f8e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61324e81613094565b82525050565b60006132608383613245565b60208301905092915050565b6000602082019050919050565b600061328482613219565b61328e8185613224565b935061329983613235565b8060005b838110156132ca5781516132b18882613254565b97506132bc8361326c565b92505060018101905061329d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61330c81612f6d565b82525050565b600061331e8383613303565b60208301905092915050565b6000602082019050919050565b6000613342826132d7565b61334c81856132e2565b9350613357836132f3565b8060005b8381101561338857815161336f8882613312565b975061337a8361332a565b92505060018101905061335b565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006133dd826130b5565b6133e781856133c1565b93506133f78185602086016130d1565b613400816130fb565b840191505092915050565b600061341783836133d2565b905092915050565b6000602082019050919050565b600061343782613395565b61344181856133a0565b935083602082028501613453856133b1565b8060005b8581101561348f5784840389528151613470858261340b565b945061347b8361341f565b925060208a01995050600181019050613457565b50829750879550505050505092915050565b600060e08201905081810360008301526134bb818a613279565b905081810360208301526134cf8189613337565b905081810360408301526134e38188613337565b905081810360608301526134f78187613337565b9050818103608083015261350b8186613337565b905081810360a083015261351f8185613337565b905081810360c0830152613533818461342c565b905098975050505050505050565b600060e082019050613556600083018a6130a6565b6135636020830189612fd0565b6135706040830188612fd0565b61357d6060830187612fd0565b61358a6080830186612fd0565b61359760a0830185612fd0565b81810360c08301526135a9818461310c565b905098975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6135f9826130fb565b810181811067ffffffffffffffff82111715613618576136176135c1565b5b80604052505050565b600061362b612f59565b905061363782826135f0565b919050565b600067ffffffffffffffff821115613657576136566135c1565b5b613660826130fb565b9050602081019050919050565b82818337600083830152505050565b600061368f61368a8461363c565b613621565b9050828152602081018484840111156136ab576136aa6135bc565b5b6136b684828561366d565b509392505050565b600082601f8301126136d3576136d26135b7565b5b81356136e384826020860161367c565b91505092915050565b6000806000806080858703121561370657613705612f63565b5b600061371487828801612f8e565b945050602061372587828801612f8e565b935050604061373687828801612f8e565b925050606085013567ffffffffffffffff81111561375757613756612f68565b5b613763878288016136be565b91505092959194509250565b600067ffffffffffffffff82111561378a576137896135c1565b5b602082029050602081019050919050565b600080fd5b60006137b36137ae8461376f565b613621565b905080838252602082019050602084028301858111156137d6576137d561379b565b5b835b818110156137ff57806137eb8882612f8e565b8452602084019350506020810190506137d8565b5050509392505050565b600082601f83011261381e5761381d6135b7565b5b813561382e8482602086016137a0565b91505092915050565b6000806040838503121561384e5761384d612f63565b5b600083013567ffffffffffffffff81111561386c5761386b612f68565b5b61387885828601613809565b925050602061388985828601612f8e565b9150509250929050565b60008115159050919050565b6138a881613893565b82525050565b60006040820190506138c3600083018561389f565b6138d06020830184612fd0565b9392505050565b7f53656e646572206973206e6f7420746865206472697665720000000000000000600082015250565b600061390d6018836130c0565b9150613918826138d7565b602082019050919050565b6000602082019050818103600083015261393c81613900565b9050919050565b7f4e6f7420616c6c2070617373656e676572732068617665206d61726b6564207460008201527f6865207269646520617320636f6d706c65746564000000000000000000000000602082015250565b600061399f6034836130c0565b91506139aa82613943565b604082019050919050565b600060208201905081810360008301526139ce81613992565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a0f82612f6d565b9150613a1a83612f6d565b9250828202613a2881612f6d565b91508282048414831517613a3f57613a3e6139d5565b5b5092915050565b600081905092915050565b50565b6000613a61600083613a46565b9150613a6c82613a51565b600082019050919050565b6000613a8282613a54565b9150819050919050565b7f43616c6c206d6574686f64206661696c65640000000000000000000000000000600082015250565b6000613ac26012836130c0565b9150613acd82613a8c565b602082019050919050565b60006020820190508181036000830152613af181613ab5565b9050919050565b7f52696465206973206e6f7420726567697374657264207769746820647269766560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000613b546021836130c0565b9150613b5f82613af8565b604082019050919050565b60006020820190508181036000830152613b8381613b47565b9050919050565b6000613b9582612f6d565b9150613ba083612f6d565b9250828203905081811115613bb857613bb76139d5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613c6357607f821691505b602082108103613c7657613c75613c1c565b5b50919050565b600081549050613c8b81613c4b565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613cf47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613cb7565b613cfe8683613cb7565b95508019841693508086168417925050509392505050565b6000613d31613d2c613d2784612f6d565b61301a565b612f6d565b9050919050565b6000819050919050565b613d4b83613d16565b613d5f613d5782613d38565b848454613cc4565b825550505050565b600090565b613d74613d67565b613d7f818484613d42565b505050565b5b81811015613da357613d98600082613d6c565b600181019050613d85565b5050565b601f821115613de857613db981613c92565b613dc284613ca7565b81016020851015613dd1578190505b613de5613ddd85613ca7565b830182613d84565b50505b505050565b600082821c905092915050565b6000613e0b60001984600802613ded565b1980831691505092915050565b6000613e248383613dfa565b9150826002028217905092915050565b818103613e42575050613f1a565b613e4b82613c7c565b67ffffffffffffffff811115613e6457613e636135c1565b5b613e6e8254613c4b565b613e79828285613da7565b6000601f831160018114613ea85760008415613e96578287015490505b613ea08582613e18565b865550613f13565b601f198416613eb687613c92565b9650613ec186613c92565b60005b82811015613ee957848901548255600182019150600185019450602081019050613ec4565b86831015613f065784890154613f02601f891682613dfa565b8355505b6001600288020188555050505b5050505050505b565b7f4b657920646f6573206e6f742065786973740000000000000000000000000000600082015250565b6000613f526012836130c0565b9150613f5d82613f1c565b602082019050919050565b60006020820190508181036000830152613f8181613f45565b9050919050565b6000613f9382612f6d565b9150613f9e83612f6d565b9250828201905080821115613fb657613fb56139d5565b5b92915050565b613fc5826130b5565b67ffffffffffffffff811115613fde57613fdd6135c1565b5b613fe88254613c4b565b613ff3828285613da7565b600060209050601f8311600181146140265760008415614014578287015190505b61401e8582613e18565b865550614086565b601f19841661403486613c92565b60005b8281101561405c57848901518255600182019150602085019450602081019050614037565b868310156140795784890151614075601f891682613dfa565b8355505b6001600288020188555050505b505050505050565b7f52696465206973206e6f7420726567697374657265642077697468207468652060008201527f7573657200000000000000000000000000000000000000000000000000000000602082015250565b60006140ea6024836130c0565b91506140f58261408e565b604082019050919050565b60006020820190508181036000830152614119816140dd565b9050919050565b7f52696465206973206e6f74207265676973746572656420776974682075736572600082015250565b60006141566020836130c0565b915061416182614120565b602082019050919050565b6000602082019050818103600083015261418581614149565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006141c682612f6d565b91506141d183612f6d565b9250826141e1576141e061418c565b5b828204905092915050565b7f4472697665722063616e6e6f7420626f6f6b207468652072696465206f72206d60008201527f6178696d756d2070617373656e67657273207265616368656400000000000000602082015250565b60006142486039836130c0565b9150614253826141ec565b604082019050919050565b600060208201905081810360008301526142778161423b565b9050919050565b7f596f75206861766520616c726561647920626f6f6b6564207468652072696465600082015250565b60006142b46020836130c0565b91506142bf8261427e565b602082019050919050565b600060208201905081810360008301526142e3816142a7565b9050919050565b7f4d6f6e65792073656e74206e6f7420657175616c20746f20726964652046617260008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006143466021836130c0565b9150614351826142ea565b604082019050919050565b6000602082019050818103600083015261437581614339565b9050919050565b7f52696465206973206e6f7420726567697374657265642077697468207061737360008201527f656e676572000000000000000000000000000000000000000000000000000000602082015250565b60006143d86025836130c0565b91506143e38261437c565b604082019050919050565b60006020820190508181036000830152614407816143cb565b9050919050565b600069ffffffffffffffffffff82169050919050565b61442d8161440e565b811461443857600080fd5b50565b60008151905061444a81614424565b92915050565b6000819050919050565b61446381614450565b811461446e57600080fd5b50565b6000815190506144808161445a565b92915050565b60008151905061449581612f77565b92915050565b600080600080600060a086880312156144b7576144b6612f63565b5b60006144c58882890161443b565b95505060206144d688828901614471565b94505060406144e788828901614486565b93505060606144f888828901614486565b92505060806145098882890161443b565b9150509295509295909350565b600061452182614450565b915061452c83614450565b925082820261453a81614450565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615614572576145716139d5565b5b8282058414831517614587576145866139d5565b5b509291505056fea264697066735822122034a6ec04ccd0922d3b74e3a07ac3e526abe579c38bf03128ca63092c50089b2364736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 92,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "rides",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Ride)87_storage)"
      },
      {
        "astId": 97,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "addressToRides",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 101,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "completionStatus",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 104,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "rideCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 107,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "rideKeys",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Ride)87_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CarPooling.Ride)",
        "numberOfBytes": "32",
        "value": "t_struct(Ride)87_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ride)87_storage": {
        "encoding": "inplace",
        "label": "struct CarPooling.Ride",
        "members": [
          {
            "astId": 73,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "driver",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 76,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "passengers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 78,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "maxPassengers",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 80,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "rideFare",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 82,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "rideId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "time",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "tripDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}